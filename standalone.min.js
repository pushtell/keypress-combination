/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {"use strict";

	module.exports = global["KeypressCombinationEmitter"] = __webpack_require__(1);
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 1 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	function Subscription(emitter, func, key) {
	  this.emitter = emitter;
	  this.func = func;
	  this.key = key;
	}

	Subscription.prototype.remove = function () {
	  var listeners = this.emitter.listeners[this.key];
	  if (!listeners || listeners.length === 0) {
	    return;
	  }
	  var index = listeners.indexOf(this.func);
	  if (index !== -1) {
	    listeners.splice(index, 1);
	  }
	  return;
	};

	function KeypressCombinationEmitter() {
	  var _this = this;

	  this.map = {};
	  this.listeners = {};
	  window.addEventListener('keydown', function (e) {
	    _this.map[e.keyCode ? e.keyCode : e.which] = true;
	    var codes = Object.keys(_this.map);
	    codes.sort();
	    var key = codes.toString();
	    if (_this.listeners[key]) {
	      for (var i = 0; i < _this.listeners[key].length; i++) {
	        _this.listeners[key][i]();
	      }
	    }
	  });
	  window.addEventListener('keyup', function (e) {
	    delete _this.map[e.keyCode ? e.keyCode : e.which];
	  });
	}

	KeypressCombinationEmitter.prototype.addListener = function () {
	  var codes = [];
	  for (var i = 0; i < arguments.length; i++) {
	    if (typeof arguments[i] === "number") {
	      codes.push(arguments[i]);
	    } else if (typeof arguments[i] === "function") {
	      codes.sort();
	      var key = codes.toString();
	      this.listeners[key] = this.listeners[key] || [];
	      this.listeners[key].push(arguments[i]);
	      return new Subscription(this, arguments[i], key);
	    }
	  }
	};

	exports.default = KeypressCombinationEmitter;
	module.exports = exports['default'];

/***/ }
/******/ ]);